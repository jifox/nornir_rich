{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# nornir_rich\n",
    "nornir_rich plugin is a combination of a processor to get additional detail for results and related functions.  By default all results are output to stdout without requiring and print_result statements.\n",
    "\n",
    "The processor constructor has some options related to keeping track of timing, screen width and whether or not to utilize progress bars.  The example below uses all defaults."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from nornir import InitNornir\n",
    "from nornir_napalm.plugins.tasks import napalm_get\n",
    "\n",
    "nr = InitNornir(\n",
    "    inventory={\n",
    "        \"plugin\": \"SimpleInventory\",\n",
    "        \"options\": {\n",
    "            \"host_file\": \"inventory/hosts.yaml\",\n",
    "            \"group_file\": \"inventory/groups.yaml\",\n",
    "            \"defaults_file\": \"inventory/defaults.yaml\",\n",
    "        }\n",
    "    },\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After creating the standard Nornir object, a RichResults processor object is instantiated and added to Nornir.  The width of 67 in the example was only used as this notebook is going into read the docs via sphinx and without it the output required a scroll bar.  Normally leaving this at defaults will just use up max length of the terminal."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from nornir_rich.plugins.processors import RichResults\n",
    "\n",
    "rr = RichResults(width=67)\n",
    "nr.processors.append(rr)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A basic password transform is done on the inventory using dotenv applied environment variables.  This is just for test environment setup."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61eda00dc0>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">passwd_from_env****************************************************\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed854460>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #000080\">* vyos ** changed = </span><span style=\"color: #ff0000; font-style: italic\">False</span><span style=\"color: #000080\"> *****************************************</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61eda00e80>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #005f00\">vvvv passwd_from_env ** changed = False vvvvv INFO [0:00:00.000087]</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61eda00e80>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #005f00\">^^^^ END passwd_from_env ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n</pre>\n"
     },
     "metadata": {}
    }
   ],
   "source": [
    "import os\n",
    "from dotenv import load_dotenv, find_dotenv\n",
    "load_dotenv(find_dotenv())\n",
    "\n",
    "def passwd_from_env(task):\n",
    "    task.host.password = os.getenv(task.host.password)\n",
    "\n",
    "r = nr.run(passwd_from_env)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "By default, write_inventory function won't list passwords without the passwords=True argument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f62047fe280>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">╭─────────────┬───────────────────────────────────────────────────╮\n│<span style=\"font-weight: bold\"> Host        </span>│<span style=\"font-weight: bold\"> Data                                              </span>│\n├─────────────┼───────────────────────────────────────────────────┤\n│ vyos        │ connection_options: {}                            │\n│             │ data: {}                                          │\n│             │ groups: []                                        │\n│             │ hostname: localhost                               │\n│             │ name: vyos                                        │\n│             │ password: '******'                                │\n│             │ platform: vyos                                    │\n│             │ port: null                                        │\n│             │ username: vyos                                    │\n│             │                                                   │\n╰─────────────┴───────────────────────────────────────────────────╯\n</pre>\n"
     },
     "metadata": {}
    }
   ],
   "source": [
    "rr.write_inventory(nr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ecf9bb50>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">run1***************************************************************\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ecf9bb50>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #000080\">* vyos ** changed = </span><span style=\"color: #ff0000; font-style: italic\">False</span><span style=\"color: #000080\"> *****************************************</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed7dfc40>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #800000\">vvvv run1 ** changed = False vvvvvvvvvvvvvvv ERROR [0:00:04.676707]</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed7dfc40>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Traceback (most recent call last):\n  File \"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/nornir/core/task.py\",\nline 98, in start\n    r = self.task(self, **self.params)\n  File \"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/nornir_napalm/plugins\n/tasks/napalm_get.py\", line 32, in napalm_get\n    device = task.host.get_connection(CONNECTION_NAME, task.nornir.config)\n  File \n\"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/nornir/core/inventory.py\", \nline 440, in get_connection\n    self.open_connection(\n  File \n\"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/nornir/core/inventory.py\", \nline 492, in open_connection\n    conn_obj.open(\n  File \"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/nornir_napalm/plugins\n/connections/__init__.py\", line 57, in open\n    connection.open()\n  File \"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/napalm_vyos/vyos.py\",\nline 98, in open\n    self.device = ConnectHandler(device_type='vyos',\n  File \n\"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/netmiko/ssh_dispatcher.py\", \nline 302, in ConnectHandler\n    return ConnectionClass(*args, **kwargs)\n  File \n\"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/netmiko/base_connection.py\",\nline 344, in __init__\n    self._open()\n  File \n\"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/netmiko/base_connection.py\",\nline 349, in _open\n    self.establish_connection()\n  File \n\"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/netmiko/base_connection.py\",\nline 918, in establish_connection\n    self.remote_conn_pre.connect(**ssh_connect_params)\n  File \"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/paramiko/client.py\", \nline 435, in connect\n    self._auth(\n  File \"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/paramiko/client.py\", \nline 764, in _auth\n    raise saved_exception\n  File \"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/paramiko/client.py\", \nline 751, in _auth\n    self._transport.auth_password(username, password)\n  File \n\"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/paramiko/transport.py\", line\n1509, in auth_password\n    return self.auth_handler.wait_for_response(my_event)\n  File \n\"/home/patrick/dev/nornir_rich/.venv/lib/python3.8/site-packages/paramiko/auth_handler.py\", \nline 250, in wait_for_response\n    raise e\nparamiko.ssh_exception.AuthenticationException: Authentication failed.\n\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed7dfc40>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #800000\">^^^^ END run1 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": "AggregatedResult (run1): {'vyos': MultiResult: [Result: \"run1\"]}"
     },
     "metadata": {},
     "execution_count": 5
    }
   ],
   "source": [
    "nr.run(task=napalm_get, getters=['interfaces'], name='run1')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The write_summary method will provide a summary of the run."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ecf9b550>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">╭───────────────────────────────────────┬────────┬────────┬───────╮\n│<span style=\"font-weight: bold\"> Task                                  </span>│<span style=\"font-weight: bold\"> Ok     </span>│<span style=\"font-weight: bold\"> Chang… </span>│<span style=\"font-weight: bold\"> Fail… </span>│\n├───────────────────────────────────────┼────────┼────────┼───────┤\n│ passwd_from_env                       │ <span style=\"color: #005f00\">1     </span> │ -      │ -     │\n│ run1                                  │ -      │ -      │ <span style=\"color: #800000\">1    </span> │\n├───────────────────────────────────────┼────────┼────────┼───────┤\n│<span style=\"font-weight: bold\"> Total                                 </span>│<span style=\"font-weight: bold\"> </span><span style=\"color: #005f00; font-weight: bold\">1     </span><span style=\"font-weight: bold\"> </span>│<span style=\"font-weight: bold\"> -      </span>│<span style=\"font-weight: bold\"> </span><span style=\"color: #800000; font-weight: bold\">1    </span><span style=\"font-weight: bold\"> </span>│\n╰───────────────────────────────────────┴────────┴────────┴───────╯\n</pre>\n"
     },
     "metadata": {}
    }
   ],
   "source": [
    "rr.write_summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Skip messages are displayed by default for skipped hosts when a task is run from nr with skipped hosts present."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f620556b550>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">return_changed*****************************************************\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f620556b550>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #808080\">* </span><span style=\"color: #808080; font-weight: bold\">{</span><span style=\"color: #008000\">'vyos'</span><span style=\"color: #808080; font-weight: bold\">}</span><span style=\"color: #808080\"> ** skipped *********************************************</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed7df580>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">return_failed******************************************************\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed7df580>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #808080\">* </span><span style=\"color: #808080; font-weight: bold\">{</span><span style=\"color: #008000\">'vyos'</span><span style=\"color: #808080; font-weight: bold\">}</span><span style=\"color: #808080\"> ** skipped *********************************************</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ec6fd700>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">return_changed*****************************************************\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ec6fd6d0>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #808080\">* </span><span style=\"color: #808080; font-weight: bold\">{</span><span style=\"color: #008000\">'vyos'</span><span style=\"color: #808080; font-weight: bold\">}</span><span style=\"color: #808080\"> ** skipped *********************************************</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": "AggregatedResult (return_changed): {}"
     },
     "metadata": {},
     "execution_count": 7
    }
   ],
   "source": [
    "from nornir.core.task import Result\n",
    "\n",
    "def return_changed(task):\n",
    "    return Result(task.host, changed=True)\n",
    "\n",
    "def return_failed(task):\n",
    "    return Result(host=task.host, failed=True)\n",
    "\n",
    "nr.run(return_changed)\n",
    "nr.run(return_failed)\n",
    "nr.run(return_changed)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f6205571b20>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">╭───────────────────────────────────────┬────────┬────────┬───────╮\n│<span style=\"font-weight: bold\"> Task                                  </span>│<span style=\"font-weight: bold\"> Ok     </span>│<span style=\"font-weight: bold\"> Chang… </span>│<span style=\"font-weight: bold\"> Fail… </span>│\n├───────────────────────────────────────┼────────┼────────┼───────┤\n│ passwd_from_env                       │ <span style=\"color: #005f00\">1     </span> │ -      │ -     │\n│ run1                                  │ -      │ -      │ <span style=\"color: #800000\">1    </span> │\n│ return_changed                        │ -      │ -      │ -     │\n│ return_failed                         │ -      │ -      │ -     │\n│ return_changed                        │ -      │ -      │ -     │\n├───────────────────────────────────────┼────────┼────────┼───────┤\n│<span style=\"font-weight: bold\"> Total                                 </span>│<span style=\"font-weight: bold\"> </span><span style=\"color: #005f00; font-weight: bold\">1     </span><span style=\"font-weight: bold\"> </span>│<span style=\"font-weight: bold\"> -      </span>│<span style=\"font-weight: bold\"> </span><span style=\"color: #800000; font-weight: bold\">1    </span><span style=\"font-weight: bold\"> </span>│\n╰───────────────────────────────────────┴────────┴────────┴───────╯\n</pre>\n"
     },
     "metadata": {}
    }
   ],
   "source": [
    "rr.write_summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Output formats are mostly handled ok and can either be highlighted with rich or left as uncolored.  By default it is uncolored as the highlighting isn't exactly pleasing to my eyes minus the exceptions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed7df730>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">grouped************************************************************\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ec70a4f0>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #000080\">* vyos ** changed = </span><span style=\"color: #00ff00; font-style: italic\">True</span><span style=\"color: #000080\"> ******************************************</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ec70a250>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #005f00\">vvvv grouped ** changed = False vvvvvvvvvvvvv INFO [0:00:00.013733]</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ec70a0d0>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #ffaf00\">---- return_diff ** changed = True ---------- INFO [0:00:00.004564]</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed7df970>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">1,8c1,8\n&lt; books:\n&lt;   - id: bk102\n&lt;       author: Crockford, Douglas\n&lt;       title: 'JavaScript: The Good Parts'\n&lt;       genre: Computer\n&lt;       price: 29.99\n&lt;       publish_date: !!str 2008-05-01\n&lt;       description: Unearthing the Excellence in JavaScript\n---\n&gt; &lt;book id=\"bk101\"&gt;\n&gt;   &lt;author&gt;Gambardella, Matthew&lt;/author&gt;\n&gt;   &lt;title&gt;XML Developer's Guide&lt;/title&gt;\n&gt;   &lt;genre&gt;Computer&lt;/genre&gt;\n&gt;   &lt;price&gt;44.95&lt;/price&gt;\n&gt;   &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;\n&gt;   &lt;description&gt;An in-depth look at creating applicationswith XML.&lt;/description&gt;\n&gt; &lt;/book&gt;\n\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f6205571b50>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #005f00\">---- return_json ** changed = False --------- INFO [0:00:00.004083]</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f6205571b50>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">{\n  \"books\": [\n    {\n      \"id\": \"bk102\",\n      \"author\": \"Crockford, Douglas\",\n      \"title\": \"JavaScript: The Good Parts\",\n      \"genre\": \"Computer\",\n      \"price\": 29.99,\n      \"publish_date\": \"2008-05-01\",\n      \"description\": \"Unearthing the Excellence in JavaScript\"\n    }\n  ]\n}\n\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f6205571a00>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #005f00\">---- return_xml ** changed = False ---------- INFO [0:00:00.004883]</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f6205571a00>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">&lt;book id=\"bk101\"&gt;\n  &lt;author&gt;Gambardella, Matthew&lt;/author&gt;\n  &lt;title&gt;XML Developer's Guide&lt;/title&gt;\n  &lt;genre&gt;Computer&lt;/genre&gt;\n  &lt;price&gt;44.95&lt;/price&gt;\n  &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;\n  &lt;description&gt;An in-depth look at creating applicationswith XML.&lt;/description&gt;\n&lt;/book&gt;\n\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f62055718b0>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #005f00\">^^^^ END grouped ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": "AggregatedResult (grouped): {'vyos': MultiResult: [Result: \"grouped\", Result: \"return_diff\", Result: \"return_json\", Result: \"return_xml\"]}"
     },
     "metadata": {},
     "execution_count": 9
    }
   ],
   "source": [
    "def return_diff(task):\n",
    "    diff = open('inventory/test.diff', 'r').read()\n",
    "    return Result(host=task.host, diff=diff, changed=True)\n",
    "\n",
    "def return_json(task):\n",
    "    json = open('inventory/test.json', 'r').read()\n",
    "    return Result(host=task.host, stdout=json)\n",
    "\n",
    "def return_xml(task):\n",
    "    xml = open('inventory/test.xml', 'r').read()\n",
    "    return Result(host=task.host, result=xml)\n",
    "\n",
    "def grouped(task):\n",
    "    task.run(return_diff)\n",
    "    task.run(return_json)\n",
    "    task.run(return_xml)\n",
    "\n",
    "nr.data.reset_failed_hosts()\n",
    "nr.run(grouped)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or highlighted..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed8541f0>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">grouped************************************************************\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed8541f0>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #000080\">* vyos ** changed = </span><span style=\"color: #00ff00; font-style: italic\">True</span><span style=\"color: #000080\"> ******************************************</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed846490>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #005f00\">vvvv grouped ** changed = False vvvvvvvvvvvvv INFO [0:00:00.000818]</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ecfa8e20>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #ffaf00\">---- return_diff ** changed = True ---------- INFO [0:00:00.000468]</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed846d00>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #000080; font-weight: bold\">1</span>,8c1,<span style=\"color: #000080; font-weight: bold\">8</span>\n&lt; books:\n&lt;   - id: bk102\n&lt;       author: Crockford, Douglas\n&lt;       title: <span style=\"color: #008000\">'JavaScript: The Good Parts'</span>\n&lt;       genre: Computer\n&lt;       price: <span style=\"color: #000080; font-weight: bold\">29.99</span>\n&lt;       publish_date: !!str <span style=\"color: #000080; font-weight: bold\">2008</span>-<span style=\"color: #000080; font-weight: bold\">05</span>-<span style=\"color: #000080; font-weight: bold\">01</span>\n&lt;       description: Unearthing the Excellence in JavaScript\n---\n&gt; <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">book</span><span style=\"color: #000000\"> </span><span style=\"color: #808000; font-style: italic\">id</span><span style=\"color: #000000\">=</span><span style=\"color: #008000\">\"bk101\"</span><span style=\"font-weight: bold\">&gt;</span>\n&gt;   <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">author</span><span style=\"font-weight: bold\">&gt;</span>Gambardella, Matthew<span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">author</span><span style=\"font-weight: bold\">&gt;</span>\n&gt;   <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">title</span><span style=\"font-weight: bold\">&gt;</span>XML Developer's Guide<span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">title</span><span style=\"font-weight: bold\">&gt;</span>\n&gt;   <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">genre</span><span style=\"font-weight: bold\">&gt;</span>Computer<span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">genre</span><span style=\"font-weight: bold\">&gt;</span>\n&gt;   <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">price</span><span style=\"font-weight: bold\">&gt;</span><span style=\"color: #000080; font-weight: bold\">44.95</span><span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">price</span><span style=\"font-weight: bold\">&gt;</span>\n&gt;   <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">publish_date</span><span style=\"font-weight: bold\">&gt;</span><span style=\"color: #000080; font-weight: bold\">2000</span>-<span style=\"color: #000080; font-weight: bold\">10</span>-<span style=\"color: #000080; font-weight: bold\">01</span><span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">publish_date</span><span style=\"font-weight: bold\">&gt;</span>\n&gt;   <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">description</span><span style=\"font-weight: bold\">&gt;</span>An in-depth look at creating applicationswith XML.<span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">description</span><span style=\"font-weight: bold\">&gt;</span>\n&gt; <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">book</span><span style=\"font-weight: bold\">&gt;</span>\n\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed7dfa00>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #005f00\">---- return_json ** changed = False --------- INFO [0:00:00.000127]</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ecfa8e20>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">{</span>\n  <span style=\"color: #008000\">\"books\"</span>: <span style=\"font-weight: bold\">[</span>\n    <span style=\"font-weight: bold\">{</span>\n      <span style=\"color: #008000\">\"id\"</span>: <span style=\"color: #008000\">\"bk102\"</span>,\n      <span style=\"color: #008000\">\"author\"</span>: <span style=\"color: #008000\">\"Crockford, Douglas\"</span>,\n      <span style=\"color: #008000\">\"title\"</span>: <span style=\"color: #008000\">\"JavaScript: The Good Parts\"</span>,\n      <span style=\"color: #008000\">\"genre\"</span>: <span style=\"color: #008000\">\"Computer\"</span>,\n      <span style=\"color: #008000\">\"price\"</span>: <span style=\"color: #000080; font-weight: bold\">29.99</span>,\n      <span style=\"color: #008000\">\"publish_date\"</span>: <span style=\"color: #008000\">\"2008-05-01\"</span>,\n      <span style=\"color: #008000\">\"description\"</span>: <span style=\"color: #008000\">\"Unearthing the Excellence in JavaScript\"</span>\n    <span style=\"font-weight: bold\">}</span>\n  <span style=\"font-weight: bold\">]</span>\n<span style=\"font-weight: bold\">}</span>\n\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed846490>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #005f00\">---- return_xml ** changed = False ---------- INFO [0:00:00.000093]</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed7df580>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">book</span><span style=\"color: #000000\"> </span><span style=\"color: #808000; font-style: italic\">id</span><span style=\"color: #000000\">=</span><span style=\"color: #008000\">\"bk101\"</span><span style=\"font-weight: bold\">&gt;</span>\n  <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">author</span><span style=\"font-weight: bold\">&gt;</span>Gambardella, Matthew<span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">author</span><span style=\"font-weight: bold\">&gt;</span>\n  <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">title</span><span style=\"font-weight: bold\">&gt;</span>XML Developer's Guide<span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">title</span><span style=\"font-weight: bold\">&gt;</span>\n  <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">genre</span><span style=\"font-weight: bold\">&gt;</span>Computer<span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">genre</span><span style=\"font-weight: bold\">&gt;</span>\n  <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">price</span><span style=\"font-weight: bold\">&gt;</span><span style=\"color: #000080; font-weight: bold\">44.95</span><span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">price</span><span style=\"font-weight: bold\">&gt;</span>\n  <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">publish_date</span><span style=\"font-weight: bold\">&gt;</span><span style=\"color: #000080; font-weight: bold\">2000</span>-<span style=\"color: #000080; font-weight: bold\">10</span>-<span style=\"color: #000080; font-weight: bold\">01</span><span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">publish_date</span><span style=\"font-weight: bold\">&gt;</span>\n  <span style=\"font-weight: bold\">&lt;</span><span style=\"color: #ff00ff; font-weight: bold\">description</span><span style=\"font-weight: bold\">&gt;</span>An in-depth look at creating applicationswith XML.<span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">description</span><span style=\"font-weight: bold\">&gt;</span>\n<span style=\"font-weight: bold\">&lt;</span><span style=\"color: #800080\">/</span><span style=\"color: #ff00ff\">book</span><span style=\"font-weight: bold\">&gt;</span>\n\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<rich.jupyter.JupyterRenderable at 0x7f61ed7df730>",
      "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #005f00\">^^^^ END grouped ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n</pre>\n"
     },
     "metadata": {}
    },
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": "AggregatedResult (grouped): {'vyos': MultiResult: [Result: \"grouped\", Result: \"return_diff\", Result: \"return_json\", Result: \"return_xml\"]}"
     },
     "metadata": {},
     "execution_count": 10
    }
   ],
   "source": [
    "rr.attrib_highlight = True\n",
    "nr.run(grouped)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "language": "python",
   "name": "python38264bitvenvvenvf64dd4b380bd459fb245d8c53eb08903"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}